$show-grid-backgrounds: true

@import "susyone"

$total-columns      : 6

$column-width       : 5em
$gutter-width       : 1.5em
$grid-padding       : $gutter-width / 2

// Uncomment to make the grid fluid (w/ a max-width)
// $container-style: fluid
// .container
//   max-width: 1380px

// Define breakpoints, in this case when there's room for the specified columns.
// $break-tablet:  10
// $break-mid: 10
$break-desktop:    10
// $break-tablet:   8
// $break-mid: 12
// $break-desktop:    16

.container
  // Include `container` if this element will contain a grid system.
  @include container($total-columns)
  // Apply our grid background stripes for development.
  @include susy-grid-background

header, #main-content, footer
  // Clearfix for full-width elements
  @include clearfix

// Automatically reset the grid width & re-apply the grid background
// to responsive layouts.
// $layouts: $break-tablet, $break-mid, $break-desktop
$layouts: $break-desktop
@each $layout in $layouts
  @include at-breakpoint($layout)
    .container
      @include set-container-width
      @include susy-grid-background

      #main-content
        // @include set-container-width
        @include susy-grid-background


@include at-breakpoint($break-desktop)
  .header
    @include span-columns($break-desktop omega)
  .blog
    @include span-columns($break-desktop omega)
    .blog_article
      @include span-columns($break-desktop omega)
    .blog_header > .blog_article
      @include span-columns(7, 10)
    .blog_header > .blog_info
      @include span-columns(3 omega, 10)
    .blog_footer
      // @include clearfix

      div:nth-of-type(1)
        @include span-columns(1)
      div:nth-of-type(2)
        @include span-columns(8, 10)
      div:nth-of-type(3)
        @include span-columns(1 omega)
  .footer
    @include span-columns($break-desktop omega)
